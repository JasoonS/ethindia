{"version":3,"sources":["img/wildcards.png","web3ProvideSwitcher.ts","drizzleOptions.tsx","components/ContractData.tsx","components/Countdown.tsx","components/USDPriceContext.tsx","components/TokenOverview.tsx","components/Offline.tsx","components/BuyModal.tsx","components/UpdateModal.tsx","components/Dapp.tsx","components/Template.tsx","components/BaseComponent.tsx","BaseContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","getInjectedWeb3","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","_window","ethereum","_ref2","currentProvider","provider","wrap","_context","prev","next","window","enable","abrupt","providerInjected","t0","console","log","web3","Web3","providers","WebsocketProvider","t1","Error","stop","apply","this","arguments","getInjectedWeb3NoLoad","error","Web3ProviderSwitcher","classCallCheck","injectedWeb3","defaultWeb3","usingInjectedWeb3","instance","_getInjectedWeb3NoLoa","_context2","_this","Proxy","get","obj","prop","web3ProvideSwitcher","fallbackUrl","switchableWeb3","createSwitchableWeb3","options","block","fallback","type","url","customProvider","contracts","VitalikSteward","ERC721Full","syncAlways","polls","accounts","ContractData","props","context","_this$contracts$_this","possibleConstructorReturn","getPrototypeOf","call","utils","methodArgs","drizzle","state","dataKey","contract","methods","method","cacheCall","toConsumableArray","nextProps","_this$contracts$nextP","_this$props","didContractChange","didMethodChange","didArgsChange","JSON","stringify","setState","initialized","react_default","createElement","pendingSpinner","synced","hideIndicator","displayData","value","toUtf8","hexToUtf8","toAscii","hexToAscii","toEth","fromWei","toDate","moment","parseInt","toString","Array","isArray","displayListItems","map","datum","index","key","concat","i","displayObjectProps","keys","forEach","push","Component","contextTypes","PropTypes","object","drizzleConnect","Countdown","countDown","displayTime","unit","valueS","String","length","addLeadingZeros","UsdPriceContext","createContext","getEtherUsdPrice","ETHUSD","axios","sent","hasOwnProperty","parseFloat","data","result","XETHZUSD","c","UsdPriceProvider","children","_useState","useState","_useState2","slicedToArray","etherUsdPrice","setEtherUsdPrice","useEffect","then","timer","setInterval","_callee2","newEtherUsdPrice","clearInterval","Provider","nullTime","years","days","hours","minutes","seconds","millisec","calculateCountdown","endDate","diff","Date","parse","toUTCString","timeLeft","Math","floor","DisplayComponent","combinedCollected","vitalikPriceEth","foreclosureTime","setCountdown","usdPrice","useContext","priceOfGorillaInUsd","combinedCollectedUsd","date","interval","clearTimeout","className","index_es","message","components_Countdown","components_ContractData","toFixed","ActionSection","patronageOwedKey","patronageOwed","totalCollectedKey","totalCollected","getPatronageOwed","getCombinedCellected","vitalikPrice","getVitalikPriceEth","BN","getTotalCollected","add","eq","updateCombineCollected","_this$state","TokenOverview_DisplayComponent","OfflineContainer","drizzleStatus","Children","only","status","BuyModal","inputs","closeModal","e","preventDefault","objectSpread","isOpen","currentTxIndex","openModal","connectedToInjectedWeb3","switchToInjectedWeb3","_x","handleInputChange","bind","assertThisInitialized","handleSubmit","abi","contractFunctions","name","j","event","_this$contracts$Vital","_this$contracts$Vital2","_this2","args","convertedInputs","input","toHex","toWei","artworkPrice","cacheSend","transactions","transactionStack","defineProperty","target","test","valueLabel","_this$props2","transactionStatus","txHash","txComplete","transactionProcessing","Fragment","mainColor","onClick","width","Text","icononly","icon","color","position","top","right","mt","mr","mb","react","h3","href","size","onSubmit","placeholder","onChange","style","startAdornment","InputAdornment_default","TokenOverview","px","py","borderTop","borderColor","justifyContent","ml","ModalState","modalState","Closed","setDepositWithdrawToggle","depositState","depositAvailable","balance","inputValue","Deposit","contractFunction","depositKey","depositAbleToWithdraw","depositObj","eth","getBalance","_this3","Price","checked","label","my","Dapp","tokenOwner","tokenOwnerKey","ownerOf","tokenOwnerObj","showDapp","isTokenOwner","Offline","src","wildcardsImage","displayPurchase","UpdateModal","components_BuyModal","margin","padding","display","DappConnected","DappWrapper","USDPriceContext_UsdPriceProvider","Template","components_Dapp","data-href","data-layout","data-size","data-show-count","BaseComponent","components_Template","BaseContainer","App","drizzle_react","drizzleOptions","src_BaseContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b5d9e3bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wildcards.195648cb.png\";","import HDWalletProvider from \"truffle-hdwallet-provider\"\nimport Web3 from \"web3\"\n\nconst getInjectedWeb3 = async (): Promise<{ provider: any, providerInjected: boolean }> => {\n\n  if (window.ethereum) {\n    const { ethereum } = window\n    try {\n      await ethereum.enable()\n      return { provider: ethereum, providerInjected: true }\n    } catch (error) {\n      // User denied account access...\n      console.log(error)\n    }\n  } else if (typeof (<any>window).web3 !== 'undefined') {\n    console.log('we have the window web3')\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n    // Use Mist/MetaMask's provider.\n    const { currentProvider } = new Web3((<any>window).web3.currentProvider)\n\n    return { provider: currentProvider, providerInjected: true }\n  }\n  try {\n    // Web3 in drizzle seems to have a bug with websockts, using http-provider so long\n    var provider = new Web3.providers.WebsocketProvider(\n      \"wss://mainnet.infura.io/ws/v3/e811479f4c414e219e7673b6671c2aba\"\n    )\n    return { provider, providerInjected: false }\n  } catch (error) {\n    // Out of web3 options; throw.\n    throw new Error('Cannot find injected web3 or valid fallback.')\n  }\n}\nconst getInjectedWeb3NoLoad = (): { provider: any, providerInjected: boolean } => {\n\n  if (window.ethereum) {\n    const { ethereum } = window\n    try {\n      return { provider: ethereum, providerInjected: true }\n    } catch (error) {\n      // User denied account access...\n      console.log(error)\n    }\n  } else if (typeof (<any>window).web3 !== 'undefined') {\n    console.log('we have the window web3')\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n    // Use Mist/MetaMask's provider.\n    const { currentProvider } = new Web3((<any>window).web3.currentProvider)\n\n    return { provider: currentProvider, providerInjected: true }\n  }\n  try {\n    // Web3 in drizzle seems to have a bug with websockts, using http-provider so long\n    const provider = new Web3.providers.WebsocketProvider(\n      \"wss://mainnet.infura.io/ws/v3/e811479f4c414e219e7673b6671c2aba\"\n    )\n    return { provider, providerInjected: false }\n  } catch (error) {\n    // Out of web3 options; throw.\n    throw new Error('Cannot find injected web3 or valid fallback.')\n  }\n}\nclass Web3ProviderSwitcher {\n\n  public static instance: Web3ProviderSwitcher\n  public injectedWeb3: any = null\n  public defaultWeb3: any\n  public providerInjected: boolean = false\n  public usingInjectedWeb3: boolean = false\n\n  constructor() {\n    if (Web3ProviderSwitcher.instance) { return Web3ProviderSwitcher.instance }\n    Web3ProviderSwitcher.instance = this\n\n    const { provider, providerInjected } = getInjectedWeb3NoLoad()\n    this.providerInjected = providerInjected\n    this.defaultWeb3 = provider\n  }\n\n\n  public async switchToInjectedWeb3() {\n    try {\n      const { provider: web3, providerInjected } = await getInjectedWeb3()\n      this.injectedWeb3 = web3\n      this.providerInjected = providerInjected\n      this.usingInjectedWeb3 = true\n    } catch (e) {\n      console.log(e)\n    }\n\n    return this.usingInjectedWeb3\n  }\n\n  public createSwitchableWeb3() {\n    const web3RequestHandler = {\n      get: (obj: any, prop: string) =>\n        this.usingInjectedWeb3 ? this.injectedWeb3[prop] : this.defaultWeb3[prop]\n    }\n\n    return new Proxy({}, web3RequestHandler)\n  }\n}\n\nexport default new Web3ProviderSwitcher()\n","import VitalikSteward from \"./contracts/VitalikSteward.json\"\nimport ERC721Full from \"./contracts/ERC721Full.json\"\nimport web3ProvideSwitcher from \"./web3ProvideSwitcher\"\n\n// todo: read env var for fallback\nconst fallbackUrl = \"wss://mainnet.infura.io/ws/v3/e811479f4c414e219e7673b6671c2aba\";\nconst switchableWeb3 = web3ProvideSwitcher.createSwitchableWeb3()\n\ninterface Options {\n  web3: any\n  contracts: any[]\n  syncAlways: boolean\n  polls: any\n}\nconst options: Options = {\n  web3: {\n    block: false,\n    fallback: {\n      type: \"ws\",\n      url: fallbackUrl,\n    },\n    customProvider: switchableWeb3,\n    // Repeating this because there seems to be some kind of bug somewhere where web3.web3 is used instead\n    web3: {\n      block: false,\n      fallback: {\n        type: \"ws\",\n        url: fallbackUrl,\n      },\n      customProvider: switchableWeb3,\n    },\n  },\n  contracts: [\n    VitalikSteward,\n    ERC721Full\n  ],\n  syncAlways: true,\n  polls: {\n    accounts: 1500,\n  },\n};\n\nexport default options;\n","import { drizzleConnect } from \"drizzle-react\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\n\nclass ContractData extends Component<{\n  contracts: any, methodArgs: any, method: any, contract: any, toUtf8: any\n  , toAscii: any\n  , toEth: any\n  , toDate: any\n  , hideIndicator: any\n}, { dataKey: any }> {\n\n  static contextTypes = {\n    drizzle: PropTypes.object\n  }\n\n  context: any;\n  utils: any\n  contracts: any\n  constructor(props: any, context: any) {\n    super(props);\n\n    // Fetch initial value from chain and return cache key for reactive updates.\n    var methodArgs = this.props.methodArgs ? this.props.methodArgs : [];\n\n    this.utils = context.drizzle.web3.utils;\n    this.contracts = context.drizzle.contracts;\n    this.state = {\n      dataKey: this.contracts[this.props.contract].methods[\n        this.props.method\n      ].cacheCall(...methodArgs),\n    };\n  }\n\n  // Will not fix legacy component\n  // eslint-disable-next-line react/no-deprecated\n  componentWillReceiveProps(nextProps: any) {\n    const { methodArgs, contract, method } = this.props;\n\n    const didContractChange = contract !== nextProps.contract;\n    const didMethodChange = method !== nextProps.method;\n    const didArgsChange =\n      JSON.stringify(methodArgs) !== JSON.stringify(nextProps.methodArgs);\n\n    if (didContractChange || didMethodChange || didArgsChange) {\n      this.setState({\n        dataKey: this.contracts[nextProps.contract].methods[\n          nextProps.method\n        ].cacheCall(...nextProps.methodArgs),\n      });\n    }\n  }\n\n  render() {\n    // Contract is not yet intialized.\n    if (!this.props.contracts[this.props.contract].initialized) {\n      return <span>Initializing...</span>;\n    }\n\n    // If the cache key we received earlier isn't in the store yet; the initial value is still being fetched.\n    if (\n      !(\n        this.state.dataKey in\n        this.props.contracts[this.props.contract][this.props.method]\n      )\n    ) {\n      return <span>Fetching...</span>;\n    }\n\n    // Show a loading spinner for future updates.\n    var pendingSpinner = this.props.contracts[this.props.contract].synced\n      ? \"\"\n      : \"\";\n\n    // Optionally hide loading spinner (EX: ERC20 token symbol).\n    if (this.props.hideIndicator) {\n      pendingSpinner = \"\";\n    }\n\n    var displayData = this.props.contracts[this.props.contract][\n      this.props.method\n    ][this.state.dataKey].value;\n\n    // Optionally convert to UTF8\n    if (this.props.toUtf8) {\n      displayData = this.context.drizzle.web3.utils.hexToUtf8(displayData);\n    }\n\n    // Optionally convert to Ascii\n    if (this.props.toAscii) {\n      displayData = this.context.drizzle.web3.utils.hexToAscii(displayData);\n    }\n\n    // Optionally convert wei to ETH\n    if (this.props.toEth) {\n      displayData = this.utils.fromWei(displayData, 'ether');\n    }\n\n    if (this.props.toDate) {\n      displayData = moment(parseInt(displayData) * 1000).toString();\n    }\n\n    // If return value is an array\n    if (Array.isArray(displayData)) {\n      const displayListItems = displayData.map((datum, index) => {\n        return (\n          <li key={index}>\n            {`${datum}`}\n            {pendingSpinner}\n          </li>\n        );\n      });\n\n      return <ul>{displayListItems}</ul>;\n    }\n\n    // If retun value is an object\n    if (typeof displayData === \"object\") {\n      var i = 0;\n      const displayObjectProps: any[] = [];\n\n      Object.keys(displayData).forEach(key => {\n        if (i !== parseInt(key)) {\n          displayObjectProps.push(\n            <li key={i}>\n              <strong>{key}</strong>\n              {pendingSpinner}\n              <br />\n              {`${displayData[key]}`}\n            </li>,\n          );\n        }\n\n        i++;\n      });\n\n      return <ul>{displayObjectProps}</ul>;\n    }\n\n    return (\n      <span>\n        {`${displayData}`}\n        {pendingSpinner}\n      </span>\n    );\n  }\n}\n\n// ContractData.contextTypes = {\n//   drizzle: PropTypes.object,\n// };\n\n/*\n * Export connected component.\n */\n\nconst mapStateToProps = (state: any) => {\n  return {\n    contracts: state.contracts,\n  };\n};\n\nexport default drizzleConnect(ContractData, mapStateToProps);\n","\nimport React from 'react';\n\ninterface time { years: number, days: number, hours: number, minutes: number, seconds: number }\n\ntype unit = \"years\" | \"days\" | \"hours\" | \"minutes\" | \"seconds\"\nconst Countdown: React.FunctionComponent<{ countDown: time }> = ({ countDown }) => {\n  const addLeadingZeros = (value: number) => {\n    let valueS = String(value);\n    while (valueS.length < 2) {\n      valueS = '0' + valueS;\n    }\n    return valueS;\n  }\n  const displayTime = (unit: unit) => countDown[unit] > 0 && `${addLeadingZeros(countDown[unit])} ${unit} `\n\n  return (\n    <span>\n      {displayTime(\"years\")}{displayTime(\"days\")}{displayTime(\"hours\")}{displayTime(\"minutes\")}{displayTime(\"seconds\")}\n    </span >\n  );\n}\n\nexport default Countdown;\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport axios from 'axios';\n\nexport const UsdPriceContext = createContext<any>('');\nexport const getEtherUsdPrice = async () => {\n  // fetch exchange rate.\n  // https://api.kraken.com/0/public/Ticker?pair=ETHUSD).result.XETHZUSD.c.0\n  const ETHUSD = await axios.get('https://api.kraken.com/0/public/Ticker?pair=ETHUSD');\n  // todo: return -1 if URI request failed\n  if (ETHUSD.hasOwnProperty('data')) {\n    return parseFloat(ETHUSD.data.result.XETHZUSD.c[0]);\n  } else {\n    return -1;\n  }\n}\n\ninterface ProviderProps {\n  children: any//React.Component\n}\n\nexport const UsdPriceProvider: React.FunctionComponent<ProviderProps> = ({ children }) => {\n  const [etherUsdPrice, setEtherUsdPrice] = useState(-1);\n\n  useEffect(() => {\n    // if the price has never been set, try to set it immediately\n    if (etherUsdPrice < 0) {\n      getEtherUsdPrice().then(setEtherUsdPrice)\n    }\n\n    const timer = setInterval(async () => {\n      const newEtherUsdPrice = await getEtherUsdPrice();\n      setEtherUsdPrice(newEtherUsdPrice)\n    }, 1500);\n    return () => clearInterval(timer);\n  }, [etherUsdPrice]);\n\n  return <UsdPriceContext.Provider value={etherUsdPrice}>\n    {children}\n  </UsdPriceContext.Provider>\n};\n\nUsdPriceProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const useUsdPrice = () => useContext(UsdPriceContext);\n","import { drizzleConnect } from \"drizzle-react\";\nimport React, { Component, Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\"\nimport { Tooltip } from 'rimble-ui'\nimport ContractData from \"./ContractData\";\nimport Countdown from \"./Countdown\"\nimport { useUsdPrice } from \"./USDPriceContext\"\n\ndeclare global {\n  interface Window { ethereum: any; }\n}\n\nwindow.ethereum = window.ethereum || {}\n\ninterface DisplayProps {\n  combinedCollected: string,\n  vitalikPriceEth: string,\n  foreclosureTime: string,\n}\n\nconst nullTime = {\n  years: 0,\n  days: 0,\n  hours: 0,\n  minutes: 0,\n  seconds: 0,\n  millisec: 0,\n}\n\nconst calculateCountdown = (endDate: string) => {\n  // let diff = (new Date(endDate)).\n  let diff = (Date.parse((new Date(endDate)).toUTCString()) - Date.parse((new Date()).toUTCString())) / 1000;\n\n  // clear countdown when date is reached\n  if (diff <= 0) return nullTime;\n\n  const timeLeft = nullTime;\n\n  // calculate time difference between now and expected date\n  if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\n    timeLeft.years = Math.floor(diff / (365.25 * 86400));\n    diff -= timeLeft.years * 365.25 * 86400;\n  }\n  if (diff >= 86400) { // 24 * 60 * 60\n    timeLeft.days = Math.floor(diff / 86400);\n    diff -= timeLeft.days * 86400;\n  }\n  if (diff >= 3600) { // 60 * 60\n    timeLeft.hours = Math.floor(diff / 3600);\n    diff -= timeLeft.hours * 3600;\n  }\n  if (diff >= 60) {\n    timeLeft.minutes = Math.floor(diff / 60);\n    diff -= timeLeft.minutes * 60;\n  }\n  timeLeft.seconds = diff;\n\n  return timeLeft;\n}\n\n// Functional component for sake of reactHooks...\nconst DisplayComponent: React.FunctionComponent<DisplayProps> = ({ combinedCollected, vitalikPriceEth: vitalikPriceEth, foreclosureTime }) => {\n\n  const [countDown, setCountdown] = useState(nullTime);\n  const usdPrice = useUsdPrice()\n  const priceOfGorillaInUsd = parseFloat(vitalikPriceEth) * usdPrice\n  const combinedCollectedUsd = parseFloat(combinedCollected) * usdPrice\n\n  useEffect(() => {\n    const date = calculateCountdown(foreclosureTime);\n    setCountdown(date);\n    const interval = setInterval(() => {\n      if (foreclosureTime !== \"N/A\") {\n\n        const date = calculateCountdown(foreclosureTime);\n        setCountdown(date);\n      }\n    }, 1000);\n    return () => clearTimeout(interval);\n  }, [foreclosureTime]);\n\n  const tooltipContent = () =>\n    foreclosureTime !== \"N/A\" ?\n      <div className=\"section\">\n        <p>The deposit for Vitalik will run out on {foreclosureTime}</p>\n        <p>Time until deposit runs out in <Countdown countDown={countDown} /></p>\n      </div>\n      :\n      <div className=\"section\">\n        <p>Loading deposit info</p>\n      </div>\n\n  return (\n    <div className=\"section\">\n      <Tooltip message={tooltipContent()}>\n        <p>\n          Current Price: <ContractData contract=\"VitalikSteward\" method=\"price\" toEth /> ETH.{priceOfGorillaInUsd > 0 && ` (~ ${priceOfGorillaInUsd.toFixed(2)} USD)`}\n          <br />\n          Total Raised: {(parseFloat(combinedCollected) < 0) ? 'LOADING' : parseFloat(combinedCollected).toFixed(7/*7 digits is enough to see the price changing when asset is reasonably priced*/)} ETH.{combinedCollectedUsd > 0 && ` (~ ${combinedCollectedUsd.toFixed(2)} USD)`}\n        </p>\n      </Tooltip>\n    </div>\n  )\n}\nclass ActionSection extends Component<{ contracts: any }, {}>  {\n  utils: any\n  contracts: any\n  state: {\n    patronageOwedKey: string\n    totalCollectedKey: string\n    patronageOwed: string\n    combinedCollected: string\n    foreclosureTime: string\n    vitalikPrice: string\n  }\n\n  static contextTypes = {\n    drizzle: PropTypes.object\n  }\n\n  context: any;\n  constructor(props: any, context: any) {\n    super(props, context)\n    this.utils = context.drizzle.web3.utils;\n    this.contracts = context.drizzle.contracts;\n    this.state = {\n      patronageOwedKey: context.drizzle.contracts.VitalikSteward.methods.patronageOwed.cacheCall(),\n      totalCollectedKey: context.drizzle.contracts.VitalikSteward.methods.totalCollected.cacheCall(),\n      patronageOwed: this.getPatronageOwed(props),\n      combinedCollected: this.getCombinedCellected(props),\n      foreclosureTime: \"N/A\",\n      vitalikPrice: this.getVitalikPriceEth(props),\n    };\n  }\n\n  getTotalCollected(props: any) {\n    if (props.contracts['VitalikSteward'].initialized && !!props.contracts['VitalikSteward']['totalCollected']['0x0'])\n      return new this.utils.BN(props.contracts['VitalikSteward']['totalCollected']['0x0'].value);\n\n    return \"-1\"\n  }\n\n\n  getPatronageOwed(props: any) {\n    if (props.contracts['VitalikSteward'].initialized && !!props.contracts['VitalikSteward']['patronageOwed']['0x0'])\n      return new this.utils.BN(props.contracts['VitalikSteward']['patronageOwed']['0x0'].value);\n\n    return \"-1\"\n  }\n\n  getVitalikPriceEth(props: any) {\n    if (props.contracts['VitalikSteward'].initialized && !!props.contracts['VitalikSteward']['price']['0x0'])\n      return this.utils.fromWei(new this.utils.BN(props.contracts['VitalikSteward']['price']['0x0'].value), 'ether').toString()\n\n    return \"-1\"\n  }\n  getCombinedCellected(props: any) {\n    const patronageOwed = this.getPatronageOwed(props);\n    const totalCollected = this.getTotalCollected(props);\n    if (patronageOwed !== \"-1\" && totalCollected !== \"-1\")\n      return this.utils.fromWei(totalCollected.add(patronageOwed), 'ether').toString();\n\n    return \"-1\"\n  }\n\n  async updateCombineCollected(props: any) {\n    const patronageOwed = this.getPatronageOwed(props);\n    const combinedCollected = this.getCombinedCellected(props)\n\n    // This is hacky, but just putting this here for now\n    const vitalikPrice = this.getVitalikPriceEth(props);\n\n    this.setState({\n      patronageOwed,\n      combinedCollected,\n      vitalikPrice,\n    });\n  }\n  // loadComponentData\n\n  async componentWillReceiveProps(nextProps: any) {\n    if (this.props.contracts['VitalikSteward']['price']['0x0'] !== nextProps.contracts['VitalikSteward']['price']['0x0']) {\n      if (nextProps.contracts['VitalikSteward']['price']['0x0'].value === '0') {\n        this.setState({\n          foreclosureTime: \"N/A\"\n        });\n      } else {\n        const foreclosureTime = moment(parseInt(await this.contracts.VitalikSteward.methods.foreclosureTime().call()) * 1000).toString();\n        this.setState({ foreclosureTime });\n      }\n    }\n\n    if (this.state.patronageOwedKey in this.props.contracts['VitalikSteward']['patronageOwed']\n      && this.state.patronageOwedKey in nextProps.contracts['VitalikSteward']['patronageOwed']\n      && this.state.totalCollectedKey in this.props.contracts['VitalikSteward']['totalCollected']\n      && this.state.totalCollectedKey in nextProps.contracts['VitalikSteward']['totalCollected']) {\n      if (!this.getPatronageOwed(this.props).eq(this.getPatronageOwed(nextProps)) || this.state.combinedCollected === \"-1\") {\n        this.updateCombineCollected(nextProps);\n      }\n    }\n  }\n\n  render() {\n    const { combinedCollected, vitalikPrice, foreclosureTime } = this.state\n\n    return (\n      <DisplayComponent {...{ combinedCollected, vitalikPriceEth: vitalikPrice, foreclosureTime }} />\n    )\n  }\n}\n\n/*\n * Export connected component.\n */\n\nconst mapStateToProps = (state: any) => {\n  return {\n    contracts: state.contracts,\n  };\n};\n\nexport default drizzleConnect(ActionSection, mapStateToProps);\n","import { drizzleConnect } from \"drizzle-react\";\nimport React, { Children, Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/*\n * Create component.\n */\n\nclass OfflineContainer extends Component<{ drizzleStatus: any, web3: any }> {\n  render() {\n    if (this.props.drizzleStatus.initialized) {\n      return Children.only(this.props.children);\n    }\n\n    if (this.props.web3.status === \"\") {\n      return (\n        <div className=\"section\">\n          This application is offline. Please ensure you have an Ethereum/web3 enabled browser.\n        </div>\n      )\n    }\n\n    return (\n      <main className=\"container loading-screen\">\n        <div className=\"pure-g\">\n          <div className=\"pure-u-1-1\">\n            <h1>⚙️</h1>\n            <p>Loading dapp...</p>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\n/*\n * Export connected component.\n */\n\nconst mapStateToProps = (state: any) => {\n  return {\n    accounts: state.accounts,\n    drizzleStatus: state.drizzleStatus,\n    web3: state.web3,\n  };\n};\n\nexport default drizzleConnect(OfflineContainer, mapStateToProps);\n","import { drizzleConnect } from \"drizzle-react\";\nimport PropTypes from \"prop-types\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport React, { Component, Fragment } from \"react\";\nimport { Button, Modal, Card, Box, Heading, Text, Flex, Loader, Input } from 'rimble-ui'\nimport web3ProvideSwitcher from \"../web3ProvideSwitcher\"\nimport TokenOverview from \"./TokenOverview\"\n\ninterface state {\n  contractFunctions: any,\n  isOpen: boolean,\n  connectedToInjectedWeb3: boolean,\n  currentTxIndex: number\n}\n\nclass BuyModal extends Component<any, any> {\n  contracts: any\n  utils: any\n  inputs: any\n  state: state\n\n  static contextTypes = {\n    drizzle: PropTypes.object\n  }\n\n  context: any;\n\n  constructor(props: any, context: any) {\n    super(props);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.contracts = context.drizzle.contracts;\n    this.utils = context.drizzle.web3.utils;\n\n    // Get the contract ABI, if it is undefined return an empty array\n    const abi = (!!this.contracts.VitalikSteward) ? this.contracts.VitalikSteward.abi : [];\n\n    this.inputs = [];\n    let contractFunctions: any = {};\n\n    // Iterate over abi for correct function.\n    for (let i = 0; i < abi.length; i++) {\n      if (abi[i].name === 'buy') {\n        this.inputs = abi[i].inputs;\n\n        for (let j = 0; j < this.inputs.length; j++) {\n          contractFunctions[this.inputs[j].name] = \"\";\n        }\n\n        break;\n      }\n    }\n\n    this.state = {\n      contractFunctions,\n      isOpen: false,\n      connectedToInjectedWeb3: false,\n      currentTxIndex: -1\n    };\n  }\n\n  handleSubmit(event: any) {\n    event.preventDefault();\n    let args: any = {};\n    const convertedInputs = this.inputs.map((input: any, index: any) => {\n      if (input.type === 'bytes32') {\n        return this.utils.toHex(this.state.contractFunctions[input.name])\n      } else if (input.type === 'uint256') {\n        return this.utils.toWei(this.state.contractFunctions[input.name], 'ether'); // all number fields are ETH  fields.\n      }\n      return this.state.contractFunctions[input.name];\n    });\n\n    // todo: if foreclosed, price should default to zero.\n    if (this.state.contractFunctions.value) {\n      const artworkPrice = new this.utils.BN(this.props.contracts.VitalikSteward['price']['0x0'].value);\n      args.value = new this.utils.BN(this.utils.toWei(this.state.contractFunctions.value, 'ether')).add(artworkPrice);\n    }\n\n    const currentTxIndex = (args) ?\n      this.contracts.VitalikSteward.methods[\n        'buy'\n      ].cacheSend(...convertedInputs, args)\n      : this.contracts.VitalikSteward.methods[\n        'buy'\n      ].cacheSend(...convertedInputs)\n\n    this.setState((state: any, props: any) => ({\n      ...state,\n      currentTxIndex\n    }))\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    const { transactions, transactionStack } = this.props;\n\n    const didTransactionsChange = transactions !== nextProps.transactions;\n    const didTransactionStackChange = transactionStack !== nextProps.transactionStack;\n  }\n\n  handleInputChange(event: any) {\n    this.setState({\n      ...this.state,\n      contractFunctions: {\n        ...this.state.contractFunctions, [event.target.name]: event.target.value\n      }\n    })\n  }\n\n  translateType(type: any) {\n    switch (true) {\n      case /^uint/.test(type):\n        return \"number\";\n      case /^string/.test(type) || /^bytes/.test(type):\n        return \"text\";\n      case /^bool/.test(type):\n        return \"checkbox\";\n      default:\n        return \"text\";\n    }\n  }\n\n  closeModal = (e: any) => {\n    e.preventDefault()\n    this.setState((state: any, props: any) => ({\n      ...state,\n      isOpen: false,\n      currentTxIndex: -1,\n    }))\n  }\n\n  openModal = async (e: any) => {\n    e.preventDefault()\n    this.setState((state: any, props: any) => ({\n      ...state,\n      isOpen: true,\n      currentTxIndex: -1,\n    }))\n\n    const connectedToInjectedWeb3 = await web3ProvideSwitcher.switchToInjectedWeb3()\n\n    this.setState((state: any, props: any) => ({\n      ...state,\n      connectedToInjectedWeb3,\n    }))\n  }\n\n  render() {\n    const valueLabel = \"Your Initial Deposit\";\n    const { transactions, transactionStack } = this.props\n    const { currentTxIndex } = this.state\n    let transactionStatus = 'Submitting transaction to the Ethereum Network.'\n    let txHash = ''\n    let txComplete = false\n    if (!!transactionStack[this.state.currentTxIndex]) {\n      const tempTxHash = transactionStack[this.state.currentTxIndex]\n      if (!!transactions[tempTxHash]) {\n        txHash = transactionStack[this.state.currentTxIndex]\n        switch (transactions[txHash].status) {\n          case 'pending':\n            transactionStatus = 'Transaction being processed by the Ethereum Network.'\n            break\n          case 'success':\n            txComplete = true\n            transactionStatus = 'Transaction is complete.'\n            break\n        }\n      }\n    }\n\n    const transactionProcessing = currentTxIndex !== -1\n    return (\n      <React.Fragment>\n        <Button mainColor=\"#2c2c2c\" onClick={this.openModal}>Buy</Button>\n\n        <Modal isOpen={this.state.isOpen}>\n          <Card width={'420px'} p={0}>\n            <Button.Text\n              icononly\n              icon={'Close'}\n              color={'moon-gray'}\n              position={'absolute'}\n              top={0}\n              right={0}\n              mt={3}\n              mr={3}\n              onClick={this.closeModal}\n            />\n            {this.state.connectedToInjectedWeb3 ?\n\n              <Box p={4} mb={3}>{\n                transactionProcessing ?\n                  <Fragment>\n                    <Heading.h3>Processing Transaction</Heading.h3>\n                    <p>{transactionStatus}</p>\n                    {!!txHash && <a href={'https://etherscan.io/tx/' + txHash} target=\"_blank\">View transaction on Ethersan</a>}\n                    {!txComplete && <Loader color=\"red\" size=\"80px\" />}\n                  </Fragment>\n                  :\n                  <Fragment>\n                    <Heading.h3>Purchase</Heading.h3>\n                    <Text>\n                      Enter the desired values for the transaction.\n                    </Text>\n                    <form className=\"pure-form pure-form-stacked\" onSubmit={this.handleSubmit}>\n                      <Input\n                        key='_newPrice'\n                        type='number'\n                        name='_newPrice'\n                        value={this.state.contractFunctions['_newPrice']}\n                        placeholder={\"Your Initial Sale Price\"}\n                        onChange={this.handleInputChange}\n                        style={{ width: '100%' }}\n                        startAdornment={<InputAdornment position=\"start\">ETH</InputAdornment>}\n                      />\n                      <Fragment>\n                        <br />\n                        <Input\n                          key={valueLabel}\n                          type='number'\n                          name='value'\n                          value={this.state.contractFunctions[valueLabel]}\n                          placeholder={valueLabel}\n                          onChange={this.handleInputChange}\n                          style={{ width: '100%' }}\n                          startAdornment={<InputAdornment position=\"start\">ETH</InputAdornment>} />\n                        <br />\n                        <br />\n                      </Fragment>\n                    </form>\n                    <TokenOverview />\n                  </Fragment>}\n              </Box>\n              :\n              <Box p={4} mb={3}>\n                <Heading.h3>NOTICE</Heading.h3>\n                <Text>\n                  Unable to connect to metamask, so unable to sign transactions.\n                </Text>\n              </Box>\n            }\n            {(!transactionProcessing) && <Flex px={4} py={3} borderTop={1} borderColor={'#E8E8E8'} justifyContent={'flex-end'}>\n              {/* <Button.Outline>Cancel</Button.Outline> In the future this could be for resetting the values or something*/}\n              <Button\n                mainColor=\"#2c2c2c\"\n                ml={3}\n                onClick={this.handleSubmit}\n              >Purchase this ad space</Button>\n            </Flex>}\n          </Card>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    contracts: state.contracts,\n    transactions: state.transactions,\n    transactionStack: state.transactionStack\n  }\n}\n\nexport default drizzleConnect(BuyModal, mapStateToProps);\n","import { drizzleConnect } from \"drizzle-react\";\nimport PropTypes from \"prop-types\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport React, { Component, Fragment } from \"react\";\nimport { Button, Modal, Card, Box, Heading, Text, Flex, Loader, Input, Radio } from 'rimble-ui'\nimport web3ProvideSwitcher from \"../web3ProvideSwitcher\"\nimport TokenOverview from \"./TokenOverview\"\nimport moment from 'moment'\n\nenum ModalState {\n  Deposit,\n  Price,\n  Closed,\n}\n\ninterface state {\n  contractFunctions: any,\n  modalState: ModalState,\n  connectedToInjectedWeb3: boolean,\n  currentTxIndex: number,\n  depositState: boolean,\n  depositAvailable: any\n  balance: number\n}\n\nclass BuyModal extends Component<any, any> {\n  contracts: any\n  utils: any\n  inputs: any\n  state: state\n  drizzle: any\n\n  // Note, context is used to get the full drizzle object. This is slightly hacky, we should be able to do this with the drizzleConnect component only.\n  static contextTypes = {\n    drizzle: PropTypes.object\n  }\n\n  context: any;\n\n  constructor(props: any, context: any) {\n    super(props);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.contracts = context.drizzle.contracts;\n    this.utils = context.drizzle.web3.utils;\n    this.drizzle = context.drizzle\n\n    // Get the contract ABI, if it is undefined return an empty array\n    const abi = (!!this.contracts.VitalikSteward) ? this.contracts.VitalikSteward.abi : [];\n\n    this.inputs = [];\n    let contractFunctions: any = {};\n\n    this.state = {\n      contractFunctions,\n      modalState: ModalState.Closed,\n      connectedToInjectedWeb3: false,\n      currentTxIndex: -1,\n      depositState: true,\n      depositAvailable: '',\n      balance: -1,\n    };\n  }\n\n  handleSubmit(event: any) {\n    event.preventDefault();\n    let inputValue = this.utils.toWei(this.state.contractFunctions['newSettingValue'], 'ether'); // all number fields are ETH  fields.\n    let currentTxIndex: number\n    if (this.state.modalState === ModalState.Deposit) {\n      const contractFunction = this.state.depositState ? 'depositWei' : 'withdrawDeposit'\n      currentTxIndex = this.contracts.VitalikSteward.methods[\n        contractFunction\n      ].cacheSend({ value: inputValue })\n    } else {\n      currentTxIndex = this.contracts.VitalikSteward.methods[\n        'changePrice'\n      ].cacheSend(inputValue)\n    }\n    this.setState((state: any, props: any) => ({\n      ...state,\n      currentTxIndex\n    }))\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    const { transactions, transactionStack } = this.props;\n\n    const didTransactionsChange = transactions !== nextProps.transactions;\n    const didTransactionStackChange = transactionStack !== nextProps.transactionStack;\n\n    const depositKey = this.context.drizzle.contracts.VitalikSteward.methods.depositAbleToWithdraw.cacheCall()\n    const depositObj = nextProps.contracts.VitalikSteward.depositAbleToWithdraw[depositKey]\n\n\n    if (!!depositObj && !!depositObj.value) {\n      const depositAvailable = this.utils.fromWei(depositObj.value, 'ether')\n      if (this.state.depositAvailable !== depositAvailable) {\n        this.setState({\n          ...this.state,\n          depositAvailable\n        })\n      }\n    }\n\n    if (!!depositObj && !!depositObj.value) {\n      const depositAvailable = this.utils.fromWei(depositObj.value, 'ether')\n      if (this.state.depositAvailable !== depositAvailable) {\n        this.setState({\n          ...this.state,\n          depositAvailable\n        })\n      }\n    }\n    if (!!this.props.accounts && !!this.props.accounts[0]) {\n      this.drizzle.web3.eth.getBalance(this.props.accounts[0]).then((balance: number) => {\n        this.setState({\n          ...this.state,\n          balance\n        })\n      })\n    }\n  }\n\n  handleInputChange(event: any) {\n    this.setState({\n      ...this.state,\n      contractFunctions: {\n        ...this.state.contractFunctions, [event.target.name]: event.target.value\n      }\n    })\n  }\n\n  translateType(type: any) {\n    switch (true) {\n      case /^uint/.test(type):\n        return \"number\";\n      case /^string/.test(type) || /^bytes/.test(type):\n        return \"text\";\n      case /^bool/.test(type):\n        return \"checkbox\";\n      default:\n        return \"text\";\n    }\n  }\n\n  closeModal = (e: any) => {\n    e.preventDefault()\n    this.setState((state: any, props: any) => ({\n      ...state,\n      modalState: ModalState.Closed,\n      currentTxIndex: -1,\n    }))\n  }\n\n  setDepositWithdrawToggle = (depositState: boolean) => {\n    this.setState((state: any, props: any) => ({\n      ...state,\n      depositState,\n    }))\n  }\n\n  openModal = async (modalState: ModalState) => {\n    this.setState((state: any, props: any) => ({\n      ...state,\n      modalState,\n      currentTxIndex: -1,\n    }))\n\n    const connectedToInjectedWeb3 = await web3ProvideSwitcher.switchToInjectedWeb3()\n\n    this.setState((state: any, props: any) => ({\n      ...state,\n      connectedToInjectedWeb3,\n    }))\n  }\n\n  render() {\n    const valueLabel = \"Your Initial Deposit\";\n    const { transactions, transactionStack } = this.props\n    const { currentTxIndex } = this.state\n    let transactionStatus = 'Submitting transaction to the Ethereum Network.'\n    let txHash = ''\n    let txComplete = false\n    if (!!transactionStack[this.state.currentTxIndex]) {\n      const tempTxHash = transactionStack[this.state.currentTxIndex]\n      if (!!transactions[tempTxHash]) {\n        txHash = transactionStack[this.state.currentTxIndex]\n        switch (transactions[txHash].status) {\n          case 'pending':\n            transactionStatus = 'Transaction being processed by the Ethereum Network.'\n            break\n          case 'success':\n            txComplete = true\n            transactionStatus = 'Transaction is complete.'\n            break\n        }\n      }\n    }\n\n    const transactionProcessing = currentTxIndex !== -1\n\n    return (\n      <React.Fragment>\n        <Button mainColor=\"#6bad3e\" onClick={() => this.openModal(ModalState.Price)} > Update Price</Button>\n        &ensp;\n        <Button mainColor=\"#6bad3e\" onClick={() => this.openModal(ModalState.Deposit)} > Add/Remove Deposit</Button>\n\n        <Modal isOpen={this.state.modalState === ModalState.Price}>\n          <Card width={'420px'} p={0}>\n            <Button.Text\n              icononly\n              icon={'Close'}\n              color={'moon-gray'}\n              position={'absolute'}\n              top={0}\n              right={0}\n              mt={3}\n              mr={3}\n              onClick={this.closeModal}\n            />\n            {this.state.connectedToInjectedWeb3 ?\n\n              <Box p={4} mb={3}>{\n                transactionProcessing ?\n                  <Fragment>\n                    <Heading.h3>Processing Transaction</Heading.h3>\n                    <p>{transactionStatus}</p>\n                    {!!txHash && <a href={'https://etherscan.io/tx/' + txHash} target=\"_blank\">View transaction on Ethersan</a>}\n                    {!txComplete && <Loader color=\"red\" size=\"80px\" />}\n                  </Fragment>\n                  :\n                  <Fragment>\n                    <Heading.h3>Price</Heading.h3>\n                    <Text>\n                      How much would you like to receive from selling Vitalik?\n                    </Text>\n                    <form className=\"pure-form pure-form-stacked\" onSubmit={this.handleSubmit}>\n                      <Input\n                        key='newSettingValue'\n                        type='number'\n                        name='newSettingValue'\n                        value={this.state.contractFunctions['newSettingValue'] || 0}\n                        placeholder={`Price`}\n                        onChange={this.handleInputChange}\n                        style={{ width: '100%' }}\n                        startAdornment={<InputAdornment position=\"start\">ETH</InputAdornment>}\n                      />\n                      <br />\n                    </form>\n                    <TokenOverview />\n                  </Fragment>}\n              </Box>\n              :\n              <Box p={4} mb={3}>\n                <Heading.h3>NOTICE</Heading.h3>\n                <Text>\n                  Unable to connect to metamask, so unable to sign transactions.\n                </Text>\n              </Box>\n            }\n            {(!transactionProcessing) && <Flex px={4} py={3} borderTop={1} borderColor={'#E8E8E8'} justifyContent={'flex-end'}>\n              {/* <Button.Outline>Cancel</Button.Outline> In the future this could be for resetting the values or something*/}\n              <Button\n                mainColor=\"#6bad3e\"\n                ml={3}\n                onClick={this.handleSubmit}\n              >Update</Button>\n            </Flex>}\n          </Card>\n        </Modal>\n        <Modal isOpen={this.state.modalState === ModalState.Deposit}>\n          <Card width={'420px'} p={0}>\n            <Button.Text\n              icononly\n              icon={'Close'}\n              color={'moon-gray'}\n              position={'absolute'}\n              top={0}\n              right={0}\n              mt={3}\n              mr={3}\n              onClick={this.closeModal}\n            />\n            {this.state.connectedToInjectedWeb3 ?\n\n              <Box p={4} mb={3}>{\n                transactionProcessing ?\n                  <Fragment>\n                    <Heading.h3>Processing Transaction</Heading.h3>\n                    <p>{transactionStatus}</p>\n                    {!!txHash && <a href={'https://etherscan.io/tx/' + txHash} target=\"_blank\">View transaction on Ethersan</a>}\n                    {!txComplete && <Loader color=\"red\" size=\"80px\" />}\n                  </Fragment>\n                  :\n                  <Fragment>\n                    <Heading.h3>Deposit</Heading.h3>\n                    <Text>\n                      How do you want to change your deposit?\n                    </Text>\n                    <Radio checked={this.state.depositState} onChange={() => this.setDepositWithdrawToggle(true)} label=\"Deposit\" my={2} />\n                    <Radio checked={!this.state.depositState} onChange={() => this.setDepositWithdrawToggle(false)} label=\"Withdrawl\" my={2} />\n                    <form className=\"pure-form pure-form-stacked\" onSubmit={this.handleSubmit}>\n                      <Input\n                        key='newSettingValue'\n                        type='number'\n                        name='newSettingValue'\n                        value={this.state.contractFunctions['newSettingValue'] || 0}\n                        placeholder={`Amount to ${this.state.depositState ? 'add' : 'remove'}`}\n                        onChange={this.handleInputChange}\n                        style={{ width: '100%' }}\n                        startAdornment={<InputAdornment position=\"start\">ETH</InputAdornment>}\n                      />\n                      <br />\n                    </form>\n                    <TokenOverview />\n                  </Fragment>}\n              </Box>\n              :\n              <Box p={4} mb={3}>\n                <Heading.h3>NOTICE</Heading.h3>\n                <Text>\n                  Unable to connect to metamask, so unable to sign transactions.\n                </Text>\n              </Box>\n            }\n            {(!transactionProcessing) && <Flex px={4} py={3} borderTop={1} borderColor={'#E8E8E8'} justifyContent={'flex-end'}>\n              {/* <Button.Outline>Cancel</Button.Outline> In the future this could be for resetting the values or something*/}\n              <Button\n                mainColor=\"#6bad3e\"\n                ml={3}\n                onClick={this.handleSubmit}\n              >{this.state.depositState ? 'Add' : 'Withdraw'}</Button>\n            </Flex>}\n          </Card>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    contracts: state.contracts,\n    transactions: state.transactions,\n    transactionStack: state.transactionStack,\n    accounts: state.accounts,\n  }\n}\n\nexport default drizzleConnect(BuyModal, mapStateToProps);\n","import React, { Component, Fragment } from \"react\"\nimport TokenOverview from \"./TokenOverview\"\nimport OfflineContainer from \"./Offline\"\nimport BuyModal from './BuyModal'\nimport UpdateModal from './UpdateModal'\nimport wildcardsImage from \"../img/wildcards.png\"\nimport { drizzleConnect } from \"drizzle-react\";\nimport PropTypes from \"prop-types\";\nimport web3ProvideSwitcher from \"../web3ProvideSwitcher\"\nimport { UsdPriceProvider } from \"./USDPriceContext\"\n\n\nclass Dapp extends Component<any,any> {\n\n  contracts: any\n  utils: any\n  inputs: any\n  state: any\n\n  static contextTypes = {\n    drizzle: PropTypes.object,\n  }\n\n  context: any;\n\n  constructor(props: any, context: any) {\n    super(props);\n\n    this.contracts = context.drizzle.contracts;\n    this.utils = context.drizzle.web3.utils;\n    this.context = context\n    \n    this.state = { tokenOwner: '' }\n  }\n\n  async componentWillReceiveProps(nextProps: any) {\n    const tokenOwnerKey = this.context.drizzle.contracts.ERC721Full.methods.ownerOf.cacheCall(42)\n    const tokenOwnerObj = nextProps.contracts['ERC721Full']['ownerOf'][tokenOwnerKey]\n\n    if (!!tokenOwnerObj && !!tokenOwnerObj.value && this.state.tokenOwner !== tokenOwnerObj.value) {\n      this.setState({\n        ...this.state,\n        tokenOwner: tokenOwnerObj.value\n      })\n    }\n  }\n\n  render() {\n    const { tokenOwner } = this.state\n    const { accounts } = this.props\n    const showDapp = web3ProvideSwitcher.providerInjected\n    const showInteracting = true\n    const isTokenOwner = tokenOwner === accounts[0]\n\n    return (\n      <Fragment>\n        <OfflineContainer>\n          <div className=\"image-container\">\n            <a href='wildcards.world'>\n            <img src={wildcardsImage} style={{ width: '100%' }} />\n            </a>\n            {this.props.displayPurchase &&\n              <div className='interaction-button-container'>\n                <div className='interaction-buttons'>\n                  {(isTokenOwner ?\n                    <div>\n                      <Fragment>\n                        <UpdateModal />\n                        <TokenOverview />\n                      </Fragment>\n                    </div>\n                    :\n                    <div>\n                      {showDapp ?\n                        <BuyModal />\n                        :\n                        <h3 style={{ margin: 0, color: '#6bad3e', padding: '0.8rem 1.2rem', display: 'inline-block' }}>\n                          Install <a href='https://metamask.io'>Metamask</a> to buy this ad space.\n                            {/* TODO: test if this is moblie and recommend a web3 app for android/iphone (eg trust-wallet)*/}\n                        </h3>\n                      }\n                      <TokenOverview />\n                    </div>\n                  )\n                  }\n                </div>\n              </div>\n            }\n          </div>\n        </OfflineContainer>\n      </Fragment >\n    )\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    contracts: state.contracts,\n    accounts: state.accounts\n  }\n}\n\nconst DappConnected = drizzleConnect(Dapp, mapStateToProps)\n\nclass DappWrapper extends Component<any, any> {\n  constructor(props: any, context: any) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <UsdPriceProvider>\n        <OfflineContainer>\n          <DappConnected displayPurchase={this.props.displayPurchase}/>\n        </OfflineContainer>\n      </UsdPriceProvider >\n    )\n  }\n}\n\nexport default DappWrapper\n\n","import React, { Component } from \"react\";\nimport Toggle from 'react-toggle'\nimport Dapp from \"./Dapp\"\n\ntype displayPurchaseState = {\n  displayPurchase: boolean\n}\n\nclass Template extends Component<{}, displayPurchaseState> {\n\n  componentWillMount() {\n    this.setState({\n      displayPurchase: false\n    });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <header>\n          <h1>\n            These ads are always for sale, purchase the ad space and set your own monthly payment...\n            <br /> and even make a profit when someone buys the ad space from you\n            </h1>\n          {/* <label>\n            <Toggle\n              defaultChecked={this.state.displayPurchase}\n              icons={false}\n              onChange={() => {\n                this.setState({ displayPurchase: !this.state.displayPurchase })\n              }} />\n            <span>Purchase Ad Space</span>\n          </label> */}\n        </header>\n        <div className=\"Grid\">\n          <div className=\"Grid-item\">\n            <Dapp displayPurchase={this.state.displayPurchase} />\n          </div>\n          <div className=\"Grid-item\">\n            <a href=\"#\"><img src=\"https://via.placeholder.com/300\" style={{ width: '100%' }} /></a>\n          </div>\n          <div className=\"Grid-item\">\n            <a href=\"#\"><img src=\"https://via.placeholder.com/300\" style={{ width: '100%' }} /></a>\n          </div>\n          <div className=\"Grid-item\">\n            <a href=\"#\"><img src=\"https://via.placeholder.com/300\" style={{ width: '100%' }} /></a>\n          </div>\n          <div className=\"Grid-item\">\n            <a href=\"#\"><img src=\"https://via.placeholder.com/300\" style={{ width: '100%' }} /></a>\n          </div>\n          <div className=\"Grid-item\">\n            <a href=\"#\"><img src=\"https://via.placeholder.com/300\" style={{ width: '100%' }} /></a>\n          </div>\n          <div className=\"Grid-item\">\n            <a href=\"#\"><img src=\"https://via.placeholder.com/300\" style={{ width: '100%' }} /></a>\n          </div>\n          <div className=\"Grid-item\">\n            <a href=\"#\"><img src=\"https://via.placeholder.com/300\" style={{ width: '100%' }} /></a>\n          </div>\n          <div className=\"Grid-item\">\n            <a href=\"#\"><img src=\"https://via.placeholder.com/300\" style={{ width: '100%' }} /></a>\n          </div>\n        </div>\n        <footer>\n          <div className=\"fb-share-button\" data-href=\"http://alwaysforsale.io\" data-layout=\"button\" data-size=\"small\">\n            <a target=\"_blank\" href=\"https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Falwaysforsale.io%2F&amp;src=sdkpreparse\" className=\"fb-xfbml-parse-ignore\">Share</a>\n          </div>\n          <div>            \n            <a href=\"https://twitter.com/intent/tweet?button_hashtag=Alwaysforsale.io&ref_src=twsrc%5Etfw\" className=\"twitter-hashtag-button\" data-show-count=\"false\">Tweet #Alwaysforsale</a>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Template\n","import React, { Component } from \"react\";\n\nimport Template from \"./Template\";\n\nclass BaseComponent extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Template />\n      </div>\n    )\n  }\n}\n\nexport default BaseComponent\n","import BaseComponent from \"./components/BaseComponent\";\nimport { drizzleConnect } from \"drizzle-react\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    accounts: state.accounts,\n    ERC721Full: state.contracts.ERC721Full,\n    VitalikSteward: state.contracts.VitalikSteward,\n    drizzleStatus: state.drizzleStatus,\n  };\n};\n\nconst BaseContainer = drizzleConnect(BaseComponent, mapStateToProps);\n\nexport default BaseContainer;\n","import React, { Component } from \"react\";\nimport { DrizzleProvider } from \"drizzle-react\";\n\nimport drizzleOptions from \"./drizzleOptions\";\nimport BaseContainer from \"./BaseContainer\";\n\nimport './app.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <DrizzleProvider options={drizzleOptions}>\n        <BaseContainer />\n      </DrizzleProvider>\n    );\n  }\n}\n\n/* unused in contract, but keeping for now */\n// class Metadata extends Component {\n\n//   data: any\n\n//   constructor() {\n//     super({}, {});\n//     this.data = {\n//       name: \"Wild Cards\",\n//       description: \"The token of endangerd animals\",\n//       image: \"https://static.thenounproject.com/png/6866-200.png\"\n//     };\n//   }\n//   render() {\n//     return (\n//       <div>{JSON.stringify(this.data)}</div>\n//     )\n//   }\n// }\n\n// class AppRoutes extends Component {\n//   render() {\n//     return (\n//       <App />\n//       // <Router>\n//       //   <Route path='/' exact component={App} />\n//       //   <Route path='/metadata' exact component={Metadata} />\n//       // </Router>\n//     )\n//   }\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRoutes from './App';\n\nReactDOM.render(<AppRoutes />, document.getElementById('root'));\n"],"sourceRoot":""}